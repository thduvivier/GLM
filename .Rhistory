lines(xseq,fitted,lwd=2,col="steelblue")
par(mfrow=c(1,1))
par(pty="s")
par(mar = c(5,6,4,2)+0.1)
nobs <- 250
x <- (1:nobs)/nobs
x0 <- 1
x2 <- x^2
x3 <- x^3
# Examples of Splines of degree 0, 1 ,2, 3
q_025 <- ((x-0.25)^0)*I(x>=0.25)
q_05 <- ((x-0.5)^0)*I(x>=0.5)
q_075 <- ((x-0.75)^0)*I(x>=0.75)
s1 <- rep(1,nobs)[x <0.25]
s2 <- rep(0.5,nobs)[x>=0.25 & x<0.5]
s3 <- rep(1.3,nobs)[x>=0.5 & x<0.75]
s4 <- rep(0.8,nobs)[x>=0.75]
plot(x[x <0.25],s1,xlab="x",ylab="",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3,
main="",xlim=c(0,1),ylim=c(.4,1.4), type="l",lwd=2)
lines(x[x>=0.25 & x<0.5],s2,lwd=2,col="red")
lines(x[x>=0.5 & x<0.75],s3,lwd=2,col="red")
lines(x[x>=0.75],s4,lwd=2,col="red")
q_025 <- ((x-0.25)^1)*I(x>=0.25)
q_05 <- ((x-0.5)^1)*I(x>=0.5)
q_075 <- ((x-0.75)^1)*I(x>=0.75)
s <- 0.5-0.4*x+0.7*q_025 -0.5*q_05+0.4*q_075
plot(x,s,xlab="x",ylab="",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3,
main="",xlim=c(0,1),ylim=c(.4,.5), type="l",lwd=2)
q_025 <- ((x-0.25)^2)*I(x>=0.25)
q_05 <- ((x-0.5)^2)*I(x>=0.5)
q_075 <- ((x-0.75)^2)*I(x>=0.75)
s <- 0.5-0.4*x+0.4*x2+0.7*q_025 +0.5*q_05-2*q_075
plot(x,s,xlab="x",ylab="",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3,
main="",xlim=c(0,1),ylim=c(.4,.9), type="l",lwd=2)
q_025 <- ((x-0.25)^3)*I(x>=0.25)
q_05 <- ((x-0.5)^3)*I(x>=0.5)
q_075 <- ((x-0.75)^3)*I(x>=0.75)
s <- 0.5-0.4*x+0.4*x2+0.7*q_025 +0.5*q_05-2*q_075
plot(x,s,xlab="x",ylab="",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3,
main="",xlim=c(0,1),ylim=c(.4,.9), type="l",lwd=2)
# Read in simulated data
setwd('C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Data/Data')
sim_nonlin <- read.delim("sim_nonlinear2.txt")
attach(sim_nonlin)
plot(x, y,xlab="x",ylab="f(x)",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
attach(sim_nonlin)
detach(Wage)
plot(x, y,xlab="x",ylab="f(x)",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
sim_nonlin <- read.delim("sim_nonlinear2.txt")
View(sim_nonlin)
attach(sim_nonlin)
plot(x, y,xlab="x",ylab="f(x)",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
x_eval <- seq(0,1,length=250)
knots <- seq(0,1,length=5)
tanzania <- read.delim("tanzaniaDist10.txt")
head(tanzania)
attach(tanzania)
par(mfrow=c(1,1))
par(pty="s")
par(mar = c(5,6,4,2)+0.1)
nrknots <- 15
minx <- min(age)-0.001
maxx <- max(age)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
ageseq <- seq(minx,maxx,length=500)
B <- spline.des(knots=knots,age,ord=4)$design
Bfit <- spline.des(knots=knots,ageseq,ord=4,outer.ok=TRUE)$design
D1 <- matrix(0,nrknots+1,nrknots+2)
D1
nrknots+1
nrknots+2
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
lambda <- 0.01
betahat <- solve(t(B)%*%B + lambda*K1)%*%t(B)%*%z
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(age, z,xlab="Age (months)",ylab="Z-score",
main="lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
nb <- ncol(Bfit)
for (ib in 1:nb)
{  lines(ageseq,Bfitscaled[,ib],lwd=2,col="steelblue") }
lines(ageseq,fitted,lwd=2,col="black")
lambda <- 1
betahat <- solve(t(B)%*%B + lambda*K1)%*%t(B)%*%z
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(age, z,xlab="Age (months)",ylab="Z-score",
main="lambda = 1",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
nb <- ncol(Bfit)
for (ib in 1:nb)
{  lines(ageseq,Bfitscaled[,ib],lwd=2,col="steelblue") }
lines(ageseq,fitted,lwd=2,col="black")
lambda <- 1000
betahat <- solve(t(B)%*%B + lambda*K1)%*%t(B)%*%z
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(age, z,xlab="Age (months)",ylab="Z-score",
main="lambda = 1000",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
nb <- ncol(Bfit)
for (ib in 1:nb)
{  lines(ageseq,Bfitscaled[,ib],lwd=2,col="steelblue") }
lines(ageseq,fitted,lwd=2,col="black")
--------------------------------------------------------------------------------------------------
library(splines)
par(mfrow=c(1,1))
par(pty="s")
# parameter bottom, left, top, right
par(mar = c(5,3,4,2)+0.1)
# Read in simulated data
sim_nonlin <- read.delim("sim_nonlinear2.txt")
library(splines)
par(mfrow=c(1,1))
par(pty="s")
# parameter bottom, left, top, right
par(mar = c(5,3,4,2)+0.1)
# Read in simulated data
sim_nonlin <- read.delim("sim_nonlinear2.txt")
attach(sim_nonlin)
sim_nonlin <- read.delim("sim_nonlinear2.txt")
par(mfrow=c(1,1))
par(pty="s")
# parameter bottom, left, top, right
par(mar = c(5,3,4,2)+0.1)
nrknots <- 10
optlambda <- 0.01
# nrknots = 5
nrknots <- 5
# optlambda <- 0.01
x <- df$budget
x
# nrknots = 5
nrknots <- 5
# optlambda <- 0.01
x <- df$budget
setwd("C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Group work")
df <- read_xlsx("IMDb.xlsx")
df <- df[,c("profit", "budget", "director_facebook_likes", "content_rating")]
# nrknots = 5
nrknots <- 5
# optlambda <- 0.01
x <- df$budget
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-2*step,maxx+2*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
sim_nonlin <- read.delim("sim_nonlinear2.txt")
setwd("C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Data/Data")
sim_nonlin <- read.delim("sim_nonlinear2.txt")
attach(sim_nonlin)
setwd("C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Data/Data")
setwd("C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Data/Data")
sim_nonlin <- read.delim("sim_nonlinear2.txt")
attach(sim_nonlin)
nrknots <- 10
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="10 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
# 2.d.1 Based on B-splines----
nrknots <- 5
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
setwd("C:/Users/duviv/Documents/University/KUL/S2/Abandoned/Generalized Linear Models/Group work")
df <- read_xlsx("IMDb.xlsx")
df <- df[,c("profit", "budget", "director_facebook_likes", "content_rating")]
df$content_rating <- as.factor(df$content_rating)
x <- df$budget
# 2.d.1 Based on B-splines----
nrknots <- 5
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
optlambda
K1
B
y
y <- df$profit
# 2.d.1 Based on B-splines----
nrknots <- 5
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="10 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
nrknots <- 5
# Optimal lambda determined in program crossvalidation_simulated.r
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="5 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
nrknots <- 20
# Optimal lambda determined in program crossvalidation_simulated.r
optlambda <- 0.01
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="5 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
lambda <- seq(0.0005,0.05,length=250)
lambda
nrknots <- 20
# Optimal lambda determined in program crossvalidation_simulated.r
optlambda <- 200
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="20 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
optlambda <- 100
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="20 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
optlambda <- 50
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="20 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
optlambda <- 20
minx <- min(x)-0.001
maxx <- max(x)+0.001
step <- (maxx-minx)/(nrknots-1)
inner.knots <- seq(minx,maxx,length=nrknots)
knots <- seq(minx-3*step,maxx+3*step,by=step)
xseq <- seq(minx+0.001,maxx-0.001,length=500)
D1 <- matrix(0,nrknots+1,nrknots+2)
for(i in 1:(nrknots+1))
{
D1[i,i] <- -1
D1[i,i+1] <- 1
}
D2 <- matrix(0,nrknots,nrknots+2)
for(i in 1:nrknots)
{
D2[i,i] <- 1
D2[i,i+1] <- -2
D2[i,i+2] <- 1
}
K1 <- t(D1)%*%D1
K2 <- t(D2)%*%D2
B <- spline.des(knots=knots,x,ord=4)$design
Bfit <- spline.des(knots=knots,xseq,ord=4)$design
betahat <- solve(t(B)%*%B + optlambda*K1)%*%t(B)%*%y
fitted <- Bfit%*%betahat
Bfitscaled <- Bfit
for(i in 1:(nrknots+2))
Bfitscaled[,i] <- Bfit[,i]*betahat[i]
plot(x, y,xlab=" ",ylab=" ",main="20 knots, optimal lambda = 0.01",
cex.lab=1.5,cex.axis=1.3,col="red",cex=1.3)
lines(xseq,fitted,lwd=2,col="steelblue")
